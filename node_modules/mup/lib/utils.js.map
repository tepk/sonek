{"version":3,"sources":["../src/utils.js"],"names":["addStdioHandlers","runTaskList","getDockerLogs","createSSHOptions","runSSHCommand","countOccurences","resolvePath","moduleNotFoundIsPath","argvContains","createOption","filterArgv","log","list","_taskQueue","map","task","options","onStdout","process","stdout","write","data","onStderr","stderr","sessions","opts","verbose","Promise","resolve","reject","run","host","summaryMap","hasOwnProperty","summary","error","nodemiralHistory","history","Callback2Stream","reading","push","forEach","shouldContinue","shift","stream","Readable","name","args","command","join","promises","input","session","_host","lineSeperator","readline","createInterface","terminal","on","console","addData","execute","bind","all","server","sshAgent","env","SSH_AUTH_SOCK","ssh","port","username","pem","privateKey","fs","readFileSync","password","existsSync","agent","info","conn","Client","connect","once","err","exec","outputStream","end","output","code","needle","haystack","regex","RegExp","match","length","paths","expandedPaths","_path","path","e","modulePath","pathPosition","message","indexOf","argvArray","option","find","value","key","argv","unwanted","result","_","slice","Object","keys","undefined"],"mappings":";;;;;;;;QAWgBA,gB,GAAAA,gB;QAgBAC,W,GAAAA,W;QAsDAC,a,GAAAA,a;QA+BAC,gB,GAAAA,gB;QAqBAC,a,GAAAA,a;QAoDAC,e,GAAAA,e;QAOAC,W,GAAAA,W;QAaAC,oB,GAAAA,oB;QAMAC,Y,GAAAA,Y;QAQAC,Y,GAAAA,Y;QAQAC,U,GAAAA,U;;AAnOhB;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMC,MAAM,qBAAM,WAAN,CAAZ;;AAEO,SAASX,gBAAT,CAA0BY,IAA1B,EAAgC;AACrCA,OAAKC,UAAL,GAAkBD,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,gBAAQ;AAC5CC,SAAKC,OAAL,GAAeD,KAAKC,OAAL,IAAgB,EAA/B;;AAEAD,SAAKC,OAAL,CAAaC,QAAb,GAAwB;AAAA,aAAM,gBAAQ;AACpCC,gBAAQC,MAAR,CAAeC,KAAf,CAAqBC,IAArB;AACD,OAFuB;AAAA,KAAxB;;AAIAN,SAAKC,OAAL,CAAaM,QAAb,GAAwB;AAAA,aAAM,gBAAQ;AACpCJ,gBAAQK,MAAR,CAAeH,KAAf,CAAqBC,IAArB;AACD,OAFuB;AAAA,KAAxB;;AAIA,WAAON,IAAP;AACD,GAZiB,CAAlB;AAaD;;AAEM,SAASd,WAAT,CAAqBW,IAArB,EAA2BY,QAA3B,EAAqCC,IAArC,EAA2C;AAChD,MAAIA,QAAQA,KAAKC,OAAjB,EAA0B;AACxB1B,qBAAiBY,IAAjB;AACA,WAAOa,KAAKC,OAAZ;AACD;;AAED,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,SAAKkB,GAAL,CAASN,QAAT,EAAmBC,IAAnB,EAAyB,sBAAc;AACrC,WAAK,IAAMM,IAAX,IAAmBC,UAAnB,EAA+B;AAC7B,YAAIA,WAAWC,cAAX,CAA0BF,IAA1B,CAAJ,EAAqC;AACnC,cAAMG,UAAUF,WAAWD,IAAX,CAAhB;AACA,cAAIG,QAAQC,KAAZ,EAAmB;AACjB,gBAAMA,QAAQD,QAAQC,KAAtB;AACAA,kBAAMC,gBAAN,GAAyBF,QAAQG,OAAjC;AACAR,mBAAOM,KAAP;;AAEA;AACD;AACF;AACF;;AAEDP;AACD,KAfD;AAgBD,GAjBM,CAAP;AAkBD;;AAED;AACA;AACA;;IACMU,e;;;AACJ,2BAAYtB,OAAZ,EAAqB;AAAA;;AAAA,kIAEbA,OAFa;AACnB;;;AAGA,UAAKK,IAAL,GAAY,EAAZ;AAJmB;AAKpB;;;;4BACOA,I,EAAM;AACZ,UAAI,KAAKkB,OAAT,EAAkB;AAChB,aAAKA,OAAL,GAAe,KAAKC,IAAL,CAAUnB,IAAV,CAAf;AACD,OAFD,MAEO;AACL,aAAKA,IAAL,CAAUmB,IAAV,CAAenB,IAAf;AACD;AACF;;;4BACO;AAAA;;AACN,WAAKkB,OAAL,GAAe,IAAf;AACA,WAAKlB,IAAL,CAAUoB,OAAV,CAAkB,YAAM;AACtB,YAAMC,iBAAiB,OAAKH,OAAL,IAAgB,OAAKC,IAAL,CAAU,OAAKnB,IAAL,CAAUsB,KAAV,EAAV,CAAvC;AACA,YAAI,CAACD,cAAL,EAAqB;AACnB,iBAAKH,OAAL,GAAe,KAAf;AACD;AACF,OALD;AAMD;;;;EAtB2BK,iBAAOC,Q;;AAyB9B,SAAS3C,aAAT,CAAuB4C,IAAvB,EAA6BtB,QAA7B,EAAuCuB,IAAvC,EAA6C;AAClD,MAAMC,2BAAyBD,KAAKE,IAAL,CAAU,GAAV,CAAzB,SAA2CH,IAA3C,UAAN;;AAEAnC,kCAA8BqC,OAA9B;;AAEA,MAAME,WAAW1B,SAASV,GAAT,CAAa,mBAAW;AACvC,QAAMqC,QAAQ,IAAIb,eAAJ,EAAd;AACA,QAAMP,aAAWqB,QAAQC,KAAnB,MAAN;AACA,QAAMC,gBAAgBC,mBAASC,eAAT,CAAyB;AAC7CL,kBAD6C;AAE7CM,gBAAU;AAFmC,KAAzB,CAAtB;AAIAH,kBAAcI,EAAd,CAAiB,MAAjB,EAAyB,gBAAQ;AAC/BC,cAAQhD,GAAR,CAAYoB,OAAOV,IAAnB;AACD,KAFD;AAGA,QAAML,UAAU;AACdC,gBAAU,wBAAQ;AAChBkC,cAAMS,OAAN,CAAcvC,IAAd;AACD,OAHa;AAIdC,gBAAU,wBAAQ;AAChB;AACAJ,gBAAQC,MAAR,CAAeC,KAAf,CAAqBW,OAAOV,IAA5B;AACD;AAPa,KAAhB;;AAUA,WAAO,yBAAU+B,QAAQS,OAAR,CAAgBC,IAAhB,CAAqBV,OAArB,CAAV,EAAyCJ,OAAzC,EAAkDhC,OAAlD,CAAP;AACD,GArBgB,CAAjB;;AAuBA,SAAOW,QAAQoC,GAAR,CAAYb,QAAZ,CAAP;AACD;;AAEM,SAAS/C,gBAAT,CAA0B6D,MAA1B,EAAkC;AACvC,MAAMC,WAAW/C,QAAQgD,GAAR,CAAYC,aAA7B;AACA,MAAMC,MAAM;AACVrC,UAAMiC,OAAOjC,IADH;AAEVsC,UAAOL,OAAOvC,IAAP,IAAeuC,OAAOvC,IAAP,CAAY4C,IAA5B,IAAqC,EAFjC;AAGVC,cAAUN,OAAOM;AAHP,GAAZ;;AAMA,MAAIN,OAAOO,GAAX,EAAgB;AACdH,QAAII,UAAJ,GAAiBC,aAAGC,YAAH,CAAgBpE,YAAY0D,OAAOO,GAAnB,CAAhB,EAAyC,MAAzC,CAAjB;AACD,GAFD,MAEO,IAAIP,OAAOW,QAAX,EAAqB;AAC1BP,QAAIO,QAAJ,GAAeX,OAAOW,QAAtB;AACD,GAFM,MAEA,IAAIV,YAAYQ,aAAGG,UAAH,CAAcX,QAAd,CAAhB,EAAyC;AAC9CG,QAAIS,KAAJ,GAAYZ,QAAZ;AACD;;AAED,SAAOG,GAAP;AACD;;AAED;AACA;AACO,SAAShE,aAAT,CAAuB0E,IAAvB,EAA6B9B,OAA7B,EAAsC;AAC3C,SAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMkD,OAAO,IAAIC,WAAJ,EAAb;;AAEA;AACA,QAAMf,WAAW/C,QAAQgD,GAAR,CAAYC,aAA7B;AACA,QAAMC,MAAM;AACVrC,YAAM+C,KAAK/C,IADD;AAEVsC,YAAOS,KAAKrD,IAAL,IAAaqD,KAAKrD,IAAL,CAAU4C,IAAxB,IAAiC,EAF7B;AAGVC,gBAAUQ,KAAKR;AAHL,KAAZ;;AAMA,QAAIQ,KAAKP,GAAT,EAAc;AACZH,UAAII,UAAJ,GAAiBC,aAAGC,YAAH,CAAgBpE,YAAYwE,KAAKP,GAAjB,CAAhB,EAAuC,MAAvC,CAAjB;AACD,KAFD,MAEO,IAAIO,KAAKH,QAAT,EAAmB;AACxBP,UAAIO,QAAJ,GAAeG,KAAKH,QAApB;AACD,KAFM,MAEA,IAAIV,YAAYQ,aAAGG,UAAH,CAAcX,QAAd,CAAhB,EAAyC;AAC9CG,UAAIS,KAAJ,GAAYZ,QAAZ;AACD;AACDc,SAAKE,OAAL,CAAab,GAAb;;AAEAW,SAAKG,IAAL,CAAU,OAAV,EAAmB,eAAO;AACxB,UAAIC,GAAJ,EAAS;AACPtD,eAAOsD,GAAP;AACD;AACF,KAJD;;AAMA;AACAJ,SAAKG,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvBH,WAAKK,IAAL,CAAUpC,OAAV,EAAmB,UAACmC,GAAD,EAAME,YAAN,EAAuB;AACxC,YAAIF,GAAJ,EAAS;AACPJ,eAAKO,GAAL;AACAzD,iBAAOsD,GAAP;;AAEA;AACD;;AAED,YAAII,SAAS,EAAb;;AAEAF,qBAAa3B,EAAb,CAAgB,MAAhB,EAAwB,gBAAQ;AAC9B6B,oBAAUlE,IAAV;AACD,SAFD;;AAIAgE,qBAAaH,IAAb,CAAkB,OAAlB,EAA2B,gBAAQ;AACjCH,eAAKO,GAAL;AACA1D,kBAAQ,EAAE4D,UAAF,EAAQD,cAAR,EAAgBxD,MAAM+C,KAAK/C,IAA3B,EAAR;AACD,SAHD;AAID,OAlBD;AAmBD,KApBD;AAqBD,GAhDM,CAAP;AAiDD;;AAEM,SAAS1B,eAAT,CAAyBoF,MAAzB,EAAiCC,QAAjC,EAA2C;AAChD,MAAMC,QAAQ,IAAIC,MAAJ,CAAWH,MAAX,EAAmB,GAAnB,CAAd;AACA,MAAMI,QAAQH,SAASG,KAAT,CAAeF,KAAf,KAAyB,EAAvC;;AAEA,SAAOE,MAAMC,MAAb;AACD;;AAEM,SAASxF,WAAT,GAA+B;AAAA,oCAAPyF,KAAO;AAAPA,SAAO;AAAA;;AACpC,MAAMC,gBAAgBD,MAAMjF,GAAN,CAAU;AAAA,WAAS,2BAAYmF,KAAZ,CAAT;AAAA,GAAV,CAAtB;;AAEA,SAAOC,eAAKtE,OAAL,0CAAgBoE,aAAhB,EAAP;AACD;;AAED;;;;;;;AAOO,SAASzF,oBAAT,CAA8B4F,CAA9B,EAAiCC,UAAjC,EAA6C;AAClD,MAAMC,eAAeF,EAAEG,OAAF,CAAUR,MAAV,GAAmBM,WAAWN,MAA9B,GAAuC,CAA5D;;AAEA,SAAOK,EAAEG,OAAF,CAAUC,OAAV,CAAkBH,UAAlB,MAAkCC,YAAzC;AACD;;AAEM,SAAS7F,YAAT,CAAsBgG,SAAtB,EAAiCC,MAAjC,EAAyC;AAC9C,MAAID,UAAUD,OAAV,CAAkBE,MAAlB,IAA4B,CAAC,CAAjC,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SAAOD,UAAUE,IAAV,CAAe;AAAA,WAASC,MAAMJ,OAAN,CAAiBE,MAAjB,UAA8B,CAAC,CAAxC;AAAA,GAAf,CAAP;AACD;;AAEM,SAAShG,YAAT,CAAsBmG,GAAtB,EAA2B;AAChC,MAAIA,IAAId,MAAJ,GAAa,CAAjB,EAAoB;AAClB,kBAAYc,GAAZ;AACD;;AAED,eAAWA,GAAX;AACD;;AAEM,SAASlG,UAAT,CAAoB8F,SAApB,EAA+BK,IAA/B,EAAqCC,QAArC,EAA+C;AACpD,MAAMC,SAASF,KAAKG,CAAL,CAAOC,KAAP,EAAf;;AAEAC,SAAOC,IAAP,CAAYN,IAAZ,EAAkBpE,OAAlB,CAA0B,eAAO;AAC/B,QAAMgE,SAAShG,aAAamG,GAAb,CAAf;;AAEA,QACEE,SAASP,OAAT,CAAiBK,GAAjB,MAA0B,CAAC,CAA3B,IACAC,KAAKD,GAAL,MAAc,KADd,IAEAC,KAAKD,GAAL,MAAcQ,SAHhB,EAIE;AACA,UAAI,CAAC5G,aAAagG,SAAb,EAAwBC,MAAxB,CAAL,EAAsC;AACpC;AACD;;AAEDM,aAAOvE,IAAP,CAAYiE,MAAZ;;AAEA,UAAI,OAAOI,KAAKD,GAAL,CAAP,KAAqB,SAAzB,EAAoC;AAClCG,eAAOvE,IAAP,CAAYqE,KAAKD,GAAL,CAAZ;AACD;AACF;AACF,GAlBD;;AAoBA,SAAOG,MAAP;AACD","file":"utils.js","sourcesContent":["import { Client } from 'ssh2';\nimport debug from 'debug';\nimport expandTilde from 'expand-tilde';\nimport fs from 'fs';\nimport path from 'path';\nimport { promisify } from 'bluebird';\nimport readline from 'readline';\nimport stream from 'stream';\n\nconst log = debug('mup:utils');\n\nexport function addStdioHandlers(list) {\n  list._taskQueue = list._taskQueue.map(task => {\n    task.options = task.options || {};\n\n    task.options.onStdout = () => data => {\n      process.stdout.write(data);\n    };\n\n    task.options.onStderr = () => data => {\n      process.stderr.write(data);\n    };\n\n    return task;\n  });\n}\n\nexport function runTaskList(list, sessions, opts) {\n  if (opts && opts.verbose) {\n    addStdioHandlers(list);\n    delete opts.verbose;\n  }\n\n  return new Promise((resolve, reject) => {\n    list.run(sessions, opts, summaryMap => {\n      for (const host in summaryMap) {\n        if (summaryMap.hasOwnProperty(host)) {\n          const summary = summaryMap[host];\n          if (summary.error) {\n            const error = summary.error;\n            error.nodemiralHistory = summary.history;\n            reject(error);\n\n            return;\n          }\n        }\n      }\n\n      resolve();\n    });\n  });\n}\n\n// Implements a simple readable stream to pass\n// the logs from nodemiral to readline which\n// then splits it into individual lines.\nclass Callback2Stream extends stream.Readable {\n  constructor(options) {\n    // Calls the stream.Readable(options) constructor\n    super(options);\n\n    this.data = [];\n  }\n  addData(data) {\n    if (this.reading) {\n      this.reading = this.push(data);\n    } else {\n      this.data.push(data);\n    }\n  }\n  _read() {\n    this.reading = true;\n    this.data.forEach(() => {\n      const shouldContinue = this.reading && this.push(this.data.shift());\n      if (!shouldContinue) {\n        this.reading = false;\n      }\n    });\n  }\n}\n\nexport function getDockerLogs(name, sessions, args) {\n  const command = `sudo docker ${args.join(' ')} ${name} 2>&1`;\n\n  log(`getDockerLogs command: ${command}`);\n\n  const promises = sessions.map(session => {\n    const input = new Callback2Stream();\n    const host = `[${session._host}]`;\n    const lineSeperator = readline.createInterface({\n      input,\n      terminal: true\n    });\n    lineSeperator.on('line', data => {\n      console.log(host + data);\n    });\n    const options = {\n      onStdout: data => {\n        input.addData(data);\n      },\n      onStderr: data => {\n        // the logs all come in on stdout so stderr isn't added to lineSeperator\n        process.stdout.write(host + data);\n      }\n    };\n\n    return promisify(session.execute.bind(session))(command, options);\n  });\n\n  return Promise.all(promises);\n}\n\nexport function createSSHOptions(server) {\n  const sshAgent = process.env.SSH_AUTH_SOCK;\n  const ssh = {\n    host: server.host,\n    port: (server.opts && server.opts.port) || 22,\n    username: server.username\n  };\n\n  if (server.pem) {\n    ssh.privateKey = fs.readFileSync(resolvePath(server.pem), 'utf8');\n  } else if (server.password) {\n    ssh.password = server.password;\n  } else if (sshAgent && fs.existsSync(sshAgent)) {\n    ssh.agent = sshAgent;\n  }\n\n  return ssh;\n}\n\n// Maybe we should create a new npm package\n// for this one. Something like 'sshelljs'.\nexport function runSSHCommand(info, command) {\n  return new Promise((resolve, reject) => {\n    const conn = new Client();\n\n    // TODO better if we can extract SSH agent info from original session\n    const sshAgent = process.env.SSH_AUTH_SOCK;\n    const ssh = {\n      host: info.host,\n      port: (info.opts && info.opts.port) || 22,\n      username: info.username\n    };\n\n    if (info.pem) {\n      ssh.privateKey = fs.readFileSync(resolvePath(info.pem), 'utf8');\n    } else if (info.password) {\n      ssh.password = info.password;\n    } else if (sshAgent && fs.existsSync(sshAgent)) {\n      ssh.agent = sshAgent;\n    }\n    conn.connect(ssh);\n\n    conn.once('error', err => {\n      if (err) {\n        reject(err);\n      }\n    });\n\n    // TODO handle error events\n    conn.once('ready', () => {\n      conn.exec(command, (err, outputStream) => {\n        if (err) {\n          conn.end();\n          reject(err);\n\n          return;\n        }\n\n        let output = '';\n\n        outputStream.on('data', data => {\n          output += data;\n        });\n\n        outputStream.once('close', code => {\n          conn.end();\n          resolve({ code, output, host: info.host });\n        });\n      });\n    });\n  });\n}\n\nexport function countOccurences(needle, haystack) {\n  const regex = new RegExp(needle, 'g');\n  const match = haystack.match(regex) || [];\n\n  return match.length;\n}\n\nexport function resolvePath(...paths) {\n  const expandedPaths = paths.map(_path => expandTilde(_path));\n\n  return path.resolve(...expandedPaths);\n}\n\n/**\n * Checks if the module not found is a certain module\n *\n * @param {Error} e - Error that was thwon\n * @param {String} modulePath - path to the module to compare the error to\n * @returns {Boolean} true if the modulePath and path in the error is the same\n */\nexport function moduleNotFoundIsPath(e, modulePath) {\n  const pathPosition = e.message.length - modulePath.length - 1;\n\n  return e.message.indexOf(modulePath) === pathPosition;\n}\n\nexport function argvContains(argvArray, option) {\n  if (argvArray.indexOf(option) > -1) {\n    return true;\n  }\n\n  return argvArray.find(value => value.indexOf(`${option}=`) > -1);\n}\n\nexport function createOption(key) {\n  if (key.length > 1) {\n    return `--${key}`;\n  }\n\n  return `-${key}`;\n}\n\nexport function filterArgv(argvArray, argv, unwanted) {\n  const result = argv._.slice();\n\n  Object.keys(argv).forEach(key => {\n    const option = createOption(key);\n\n    if (\n      unwanted.indexOf(key) === -1 &&\n      argv[key] !== false &&\n      argv[key] !== undefined\n    ) {\n      if (!argvContains(argvArray, option)) {\n        return;\n      }\n\n      result.push(option);\n\n      if (typeof argv[key] !== 'boolean') {\n        result.push(argv[key]);\n      }\n    }\n  });\n\n  return result;\n}\n"]}