{"version":3,"sources":["../../../src/plugins/docker/utils.js"],"names":["checkVersion","minMajor","minMinor","version","parts","trim","split","valid","parseInt"],"mappings":";;;;;QAGgBA,Y,GAAAA,Y;AAHhB,IAAMC,WAAW,CAAjB;AACA,IAAMC,WAAW,EAAjB;;AAEO,SAASF,YAAT,GAAoC;AAAA,MAAdG,OAAc,uEAAJ,EAAI;;AACzC,MAAMC,QAAQD,QAAQE,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAAd;AACA,MAAIC,QAAQ,IAAZ;;AAEA,MAAIC,SAASJ,MAAM,CAAN,CAAT,EAAmB,EAAnB,IAAyBH,QAA7B,EAAuC;AACrCM,YAAQ,KAAR;AACD,GAFD,MAEO,IACLC,SAASJ,MAAM,CAAN,CAAT,EAAmB,EAAnB,MAA2BH,QAA3B,IACAO,SAASJ,MAAM,CAAN,CAAT,EAAmB,EAAnB,IAAyBF,QAFpB,EAGL;AACAK,YAAQ,KAAR;AACD;;AAED,SAAOA,KAAP;AACD","file":"utils.js","sourcesContent":["const minMajor = 1;\nconst minMinor = 13;\n\nexport function checkVersion(version = '') {\n  const parts = version.trim().split('.');\n  let valid = true;\n\n  if (parseInt(parts[0], 10) < minMajor) {\n    valid = false;\n  } else if (\n    parseInt(parts[0], 10) === minMajor &&\n    parseInt(parts[1], 10) < minMinor\n  ) {\n    valid = false;\n  }\n\n  return valid;\n}\n"]}