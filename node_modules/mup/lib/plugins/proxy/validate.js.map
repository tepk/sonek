{"version":3,"sources":["../../../src/plugins/proxy/validate.js"],"names":["config","addDepreciation","combineErrorDetails","VALIDATE_OPTIONS","addLocation","details","joi","validate","proxy","schema","app","env","PORT","push","message","path","shared","clientUploadLimit","object","keys","ssl","letsEncryptEmail","string","trim","crt","key","forceSSL","bool","and","without","or","domains","required","nginxServerConfig","nginxLocationConfig","alternatives","try","number","httpPort","httpsPort","nginxConfig","pattern","boolean","envLetsEncrypt","ACME_CA_URI","regex","RegExp","DEBUG","NGINX_PROXY_CONTAINER"],"mappings":";;;;;;kBAqCe,UAASA,MAAT,QAKZ;AAAA,MAJDC,eAIC,QAJDA,eAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,MAAIC,UAAU,EAAd;AACAA,YAAUH,oBACRG,OADQ,EAERC,cAAIC,QAAJ,CAAaP,OAAOQ,KAApB,EAA2BC,MAA3B,EAAmCN,gBAAnC,CAFQ,CAAV;AAIA,MACEH,OAAOU,GAAP,IACAV,OAAOU,GAAP,CAAWC,GADX,IAEAX,OAAOU,GAAP,CAAWC,GAAX,CAAeC,IAFf,IAGAZ,OAAOU,GAAP,CAAWC,GAAX,CAAeC,IAAf,KAAwB,EAJ1B,EAKE;AACAP,YAAQQ,IAAR,CAAa;AACXC,eAAS,sDADE;AAEXC,YAAM;AAFK,KAAb;AAID;;AAED,MAAIf,OAAOQ,KAAP,CAAaQ,MAAb,IAAuBhB,OAAOQ,KAAP,CAAaQ,MAAb,CAAoBC,iBAA/C,EAAkE;AAChEZ,cAAUJ,gBACRI,OADQ,EAER,0BAFQ,EAGR,qCAHQ,EAIR,sBAJQ,CAAV;AAMD;;AAED,SAAOD,YAAYC,OAAZ,EAAqB,OAArB,CAAP;AACD,C;;AAtED;;;;;;AAEA,IAAMI,SAASH,cAAIY,MAAJ,GAAaC,IAAb,CAAkB;AAC/BC,OAAKd,cACFY,MADE,GAEFC,IAFE,CAEG;AACJE,sBAAkBf,cAAIgB,MAAJ,GAAaC,IAAb,EADd;AAEJC,SAAKlB,cAAIgB,MAAJ,GAAaC,IAAb,EAFD;AAGJE,SAAKnB,cAAIgB,MAAJ,GAAaC,IAAb,EAHD;AAIJG,cAAUpB,cAAIqB,IAAJ;AAJN,GAFH,EAQFC,GARE,CAQE,KARF,EAQS,KART,EASFC,OATE,CASM,kBATN,EAS0B,CAAC,KAAD,EAAQ,KAAR,CAT1B,EAUFC,EAVE,CAUC,kBAVD,EAUqB,KAVrB,EAU4B,UAV5B,CAD0B;AAY/BC,WAASzB,cAAIgB,MAAJ,GAAaU,QAAb,EAZsB;AAa/BC,qBAAmB3B,cAAIgB,MAAJ,EAbY;AAc/BY,uBAAqB5B,cAAIgB,MAAJ,EAdU;AAe/BL,qBAAmBX,cAAIgB,MAAJ,EAfY;AAgB/BN,UAAQV,cAAIY,MAAJ,GAAaC,IAAb,CAAkB;AACxBF,uBAAmBX,cAAI6B,YAAJ,GAAmBC,GAAnB,CAAuB9B,cAAI+B,MAAJ,EAAvB,EAAqC/B,cAAIgB,MAAJ,EAArC,CADK;AAExBgB,cAAUhC,cAAI+B,MAAJ,EAFc;AAGxBE,eAAWjC,cAAI+B,MAAJ,EAHa;AAIxBG,iBAAalC,cAAIgB,MAAJ,EAJW;AAKxBX,SAAKL,cACFY,MADE,GAEFuB,OAFE,CAEM,SAFN,EAEiB,CAACnC,cAAIgB,MAAJ,EAAD,EAAehB,cAAI+B,MAAJ,EAAf,EAA6B/B,cAAIoC,OAAJ,EAA7B,CAFjB,CALmB;AAQxBC,oBAAgBrC,cACbY,MADa,GAEbC,IAFa,CAER;AACJyB,mBAAatC,cAAIgB,MAAJ,GAAauB,KAAb,CAAmB,IAAIC,MAAJ,CAAW,kBAAX,EAA+B,GAA/B,CAAnB,CADT;AAEJC,aAAOzC,cAAIoC,OAAJ,EAFH;AAGJM,6BAAuB1C,cAAIgB,MAAJ;AAHnB,KAFQ,EAObmB,OAPa,CAOL,SAPK,EAOM,CAACnC,cAAIgB,MAAJ,EAAD,EAAehB,cAAI+B,MAAJ,EAAf,EAA6B/B,cAAIoC,OAAJ,EAA7B,CAPN;AARQ,GAAlB;AAhBuB,CAAlB,CAAf","file":"validate.js","sourcesContent":["import joi from 'joi';\n\nconst schema = joi.object().keys({\n  ssl: joi\n    .object()\n    .keys({\n      letsEncryptEmail: joi.string().trim(),\n      crt: joi.string().trim(),\n      key: joi.string().trim(),\n      forceSSL: joi.bool()\n    })\n    .and('crt', 'key')\n    .without('letsEncryptEmail', ['crt', 'key'])\n    .or('letsEncryptEmail', 'crt', 'forceSSL'),\n  domains: joi.string().required(),\n  nginxServerConfig: joi.string(),\n  nginxLocationConfig: joi.string(),\n  clientUploadLimit: joi.string(),\n  shared: joi.object().keys({\n    clientUploadLimit: joi.alternatives().try(joi.number(), joi.string()),\n    httpPort: joi.number(),\n    httpsPort: joi.number(),\n    nginxConfig: joi.string(),\n    env: joi\n      .object()\n      .pattern(/[\\s\\S]*/, [joi.string(), joi.number(), joi.boolean()]),\n    envLetsEncrypt: joi\n      .object()\n      .keys({\n        ACME_CA_URI: joi.string().regex(new RegExp('^(http|https)://', 'i')),\n        DEBUG: joi.boolean(),\n        NGINX_PROXY_CONTAINER: joi.string()\n      })\n      .pattern(/[\\s\\S]*/, [joi.string(), joi.number(), joi.boolean()])\n  })\n});\n\nexport default function(config, {\n  addDepreciation,\n  combineErrorDetails,\n  VALIDATE_OPTIONS,\n  addLocation\n}) {\n  let details = [];\n  details = combineErrorDetails(\n    details,\n    joi.validate(config.proxy, schema, VALIDATE_OPTIONS)\n  );\n  if (\n    config.app &&\n    config.app.env &&\n    config.app.env.PORT &&\n    config.app.env.PORT !== 80\n  ) {\n    details.push({\n      message: 'app.env.PORT is ignored when using the reverse proxy',\n      path: ''\n    });\n  }\n\n  if (config.proxy.shared && config.proxy.shared.clientUploadLimit) {\n    details = addDepreciation(\n      details,\n      'shared.clientUploadLimit',\n      'Use proxy.clientUploadLimit instead',\n      'https://git.io/vN5tn'\n    );\n  }\n\n  return addLocation(details, 'proxy');\n}\n"]}