{"version":3,"sources":["../../../src/plugins/meteor/utils.js"],"names":["checkAppStarted","addStartAppTask","prepareBundleSupported","list","api","script","resolvePath","__dirname","getConfig","app","publishedPort","docker","imagePort","executeScript","vars","deployCheckWaitTime","appName","name","deployCheckPort","appConfig","isDeploy","commandHistory","find","removeImage","dockerConfig","supportedImages","prepareBundle","image","indexOf","supportedImage"],"mappings":";;;;;QAAgBA,e,GAAAA,e;QAiBAC,e,GAAAA,e;QAeAC,sB,GAAAA,sB;AAhCT,SAASF,eAAT,CAAyBG,IAAzB,EAA+BC,GAA/B,EAAoC;AACzC,MAAMC,SAASD,IAAIE,WAAJ,CAAgBC,SAAhB,EAA2B,+BAA3B,CAAf;;AADyC,uBAEzBH,IAAII,SAAJ,EAFyB;AAAA,MAEjCC,GAFiC,kBAEjCA,GAFiC;;AAGzC,MAAMC,gBAAgBD,IAAIE,MAAJ,CAAWC,SAAX,IAAwB,EAA9C;;AAEAT,OAAKU,aAAL,CAAmB,sBAAnB,EAA2C;AACzCR,kBADyC;AAEzCS,UAAM;AACJC,2BAAqBN,IAAIM,mBAAJ,IAA2B,EAD5C;AAEJC,eAASP,IAAIQ,IAFT;AAGJC,uBAAiBR;AAHb;AAFmC,GAA3C;;AASA,SAAOP,IAAP;AACD;;AAEM,SAASF,eAAT,CAAyBE,IAAzB,EAA+BC,GAA/B,EAAoC;AACzC,MAAMe,YAAYf,IAAII,SAAJ,GAAgBC,GAAlC;AACA,MAAMW,WAAWhB,IAAIiB,cAAJ,CAAmBC,IAAnB,CAAwB;AAAA,QAAGL,IAAH,QAAGA,IAAH;AAAA,WAAcA,SAAS,eAAvB;AAAA,GAAxB,CAAjB;;AAEAd,OAAKU,aAAL,CAAmB,cAAnB,EAAmC;AACjCR,YAAQD,IAAIE,WAAJ,CAAgBC,SAAhB,EAA2B,wBAA3B,CADyB;AAEjCO,UAAM;AACJE,eAASG,UAAUF,IADf;AAEJM,mBAAaH,YAAY,CAAClB,uBAAuBiB,UAAUR,MAAjC;AAFtB;AAF2B,GAAnC;;AAQA,SAAOR,IAAP;AACD;;AAEM,SAASD,sBAAT,CAAgCsB,YAAhC,EAA8C;AACnD,MAAMC,kBAAkB,CAAC,iBAAD,EAAoB,eAApB,CAAxB;;AAEA,MAAI,mBAAmBD,YAAvB,EAAqC;AACnC,WAAOA,aAAaE,aAApB;AACD;;AAED,SAAOD,gBAAgBH,IAAhB,CACL;AAAA,WAAkBE,aAAaG,KAAb,CAAmBC,OAAnB,CAA2BC,cAA3B,MAA+C,CAAjE;AAAA,GADK,KAEF,KAFL;AAGD","file":"utils.js","sourcesContent":["export function checkAppStarted(list, api) {\n  const script = api.resolvePath(__dirname, 'assets/meteor-deploy-check.sh');\n  const { app } = api.getConfig();\n  const publishedPort = app.docker.imagePort || 80;\n\n  list.executeScript('Verifying Deployment', {\n    script,\n    vars: {\n      deployCheckWaitTime: app.deployCheckWaitTime || 60,\n      appName: app.name,\n      deployCheckPort: publishedPort\n    }\n  });\n\n  return list;\n}\n\nexport function addStartAppTask(list, api) {\n  const appConfig = api.getConfig().app;\n  const isDeploy = api.commandHistory.find(({ name }) => name === 'meteor.deploy');\n\n  list.executeScript('Start Meteor', {\n    script: api.resolvePath(__dirname, 'assets/meteor-start.sh'),\n    vars: {\n      appName: appConfig.name,\n      removeImage: isDeploy && !prepareBundleSupported(appConfig.docker)\n    }\n  });\n\n  return list;\n}\n\nexport function prepareBundleSupported(dockerConfig) {\n  const supportedImages = ['abernix/meteord', 'zodern/meteor'];\n\n  if ('prepareBundle' in dockerConfig) {\n    return dockerConfig.prepareBundle;\n  }\n\n  return supportedImages.find(\n    supportedImage => dockerConfig.image.indexOf(supportedImage) === 0\n  ) || false;\n}\n"]}