{"version":3,"sources":["../../../src/plugins/meteor/validate.js"],"names":["config","addDepreciation","combineErrorDetails","VALIDATE_OPTIONS","serversExist","addLocation","details","joi","validate","app","schema","name","indexOf","push","message","path","ssl","env","servers","nginx","docker","imageFrontendServer","meteor","object","keys","string","min","required","port","number","type","pattern","bool","settings","deployCheckWaitTime","deployCheckPort","enableUploadProgressBar","dockerImage","image","trim","imagePort","args","array","items","bind","prepareBundle","networks","buildInstructions","stopAppDuringPrepareBundle","buildOptions","serverOnly","debug","cleanAfterBuild","buildLocation","mobileSettings","server","uri","allowIncompatibleUpdates","boolean","executable","ROOT_URL","regex","RegExp","MONGO_URL","log","driver","opts","volumes","clientUploadLimit","autogenerate","email","domains","crt","key","upload","and","without","or"],"mappings":"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","file":"validate.js","sourcesContent":["import joi from 'joi';\n\nconst schema = joi.object().keys({\n  name: joi.string().min(1).required(),\n  path: joi.string().min(1).required(),\n  port: joi.number(),\n  type: joi.string(),\n  servers: joi.object().required().pattern(\n    /[/s/S]*/,\n    joi.object().keys({\n      env: joi.object().pattern(\n        /[/s/S]*/,\n        [joi.string(), joi.number(), joi.bool()]\n      ),\n      settings: joi.string()\n    })\n  ),\n  deployCheckWaitTime: joi.number(),\n  deployCheckPort: joi.number(),\n  enableUploadProgressBar: joi.bool(),\n  dockerImage: joi.string(),\n  docker: joi.object().keys({\n    image: joi.string().trim(),\n    imagePort: joi.number(),\n    imageFrontendServer: joi.string(),\n    args: joi.array().items(joi.string()),\n    bind: joi.string().trim(),\n    prepareBundle: joi.bool(),\n    networks: joi\n      .array()\n      .items(joi.string()),\n    buildInstructions: joi.array().items(joi.string()),\n    stopAppDuringPrepareBundle: joi.bool()\n  }),\n  buildOptions: joi.object().keys({\n    serverOnly: joi.bool(),\n    debug: joi.bool(),\n    cleanAfterBuild: joi.bool(),\n    buildLocation: joi.string(),\n    mobileSettings: joi.object(),\n    server: joi.string().uri(),\n    allowIncompatibleUpdates: joi.boolean(),\n    executable: joi.string()\n  }),\n  env: joi\n    .object()\n    .keys({\n      ROOT_URL: joi\n        .string()\n        .regex(\n          new RegExp('^(http|https)://', 'i'),\n          'valid url with \"http://\" or \"https://\"'\n        )\n        .required(),\n      MONGO_URL: joi.string()\n    })\n    .pattern(/[\\s\\S]*/, [joi.string(), joi.number(), joi.bool()]),\n  log: joi.object().keys({\n    driver: joi.string(),\n    opts: joi.object()\n  }),\n  volumes: joi.object(),\n  nginx: joi.object().keys({\n    clientUploadLimit: joi.string().trim()\n  }),\n  ssl: joi\n    .object()\n    .keys({\n      autogenerate: joi\n        .object()\n        .keys({\n          email: joi.string().email().required(),\n          domains: joi.string().required()\n        }),\n      crt: joi.string().trim(),\n      key: joi.string().trim(),\n      port: joi.number(),\n      upload: joi.boolean()\n    })\n    .and('crt', 'key')\n    .without('autogenerate', ['crt', 'key'])\n    .or('crt', 'autogenerate')\n});\n\nexport default function(\n  config,\n  {\n    addDepreciation,\n    combineErrorDetails,\n    VALIDATE_OPTIONS,\n    serversExist,\n    addLocation\n  }\n) {\n  let details = [];\n  details = combineErrorDetails(\n    details,\n    joi.validate(config.app, schema, VALIDATE_OPTIONS)\n  );\n  if (config.app.name && config.app.name.indexOf(' ') > -1) {\n    details.push({\n      message: 'has a space',\n      path: 'name'\n    });\n  }\n  if (\n    typeof config.app.ssl === 'object' &&\n    'autogenerate' in config.app.ssl &&\n    'PORT' in config.app.env\n  ) {\n    details.push({\n      message: 'PORT can not be set when using ssl.autogenerate',\n      path: 'env'\n    });\n  }\n  details = combineErrorDetails(\n    details,\n    serversExist(config.servers, config.app.servers)\n  );\n\n  // Depreciations\n  if (config.app.ssl) {\n    details = addDepreciation(\n      details,\n      'ssl',\n      'Use the reverse proxy instead',\n      'https://git.io/vN5tn'\n    );\n  }\n\n  if (config.app.nginx) {\n    details = addDepreciation(\n      details,\n      'nginx',\n      'Use the reverse proxy instead',\n      'https://git.io/vN5tn'\n    );\n  }\n\n  if (config.app.docker && config.app.docker.imageFrontendServer) {\n    details = addDepreciation(\n      details,\n      'docker.imageFrontendServer',\n      'Use the reverse proxy instead',\n      'https://git.io/vN5tn'\n    );\n  }\n\n  return addLocation(details, config.meteor ? 'meteor' : 'app');\n}\n"]}