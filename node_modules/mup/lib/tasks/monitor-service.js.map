{"version":3,"sources":["../../src/tasks/monitor-service.js"],"names":["monitorServiceProgress","check","session","Promise","resolve","reject","execute","serviceName","err","output","console","dir","taskList","newImage","executeFunction"],"mappings":";;;;;QAWgBA,sB,GAAAA,sB;;;;AAXhB,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCH,YAAQI,OAAR,6BAA0CC,WAA1C,+BAA+E,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9FC,cAAQC,GAAR,CAAY;AACVH,gBADU;AAEVC;AAFU,OAAZ;AAID,KALD;AAMD,GAPM,CAAP;AAQD;;AAEM,SAAST,sBAAT,CAAgCY,QAAhC,EAA0CL,WAA1C,EAAuDM,QAAvD,EAAiE;AAAA;;AACtED,WAASE,eAAT,CAAyB,+BAAzB;AAAA,uEAA0D,iBAAMZ,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGlDD,MAAMC,OAAN,CAHkD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1D;;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAOU,QAAP;AACD","file":"monitor-service.js","sourcesContent":["function check(session) {\n  return new Promise((resolve, reject) => {\n    session.execute(`docker service inspect ${serviceName} --format='{{json .}}'`, (err, output) => {\n      console.dir({\n        err,\n        output\n      });\n    });\n  });\n}\n\nexport function monitorServiceProgress(taskList, serviceName, newImage) {\n  taskList.executeFunction('Waiting for service to update', async session => {\n    // const session = sessions[0];\n\n    await check(session);\n  });\n\n  return taskList;\n}\n"]}