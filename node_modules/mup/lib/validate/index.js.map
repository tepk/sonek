{"version":3,"sources":["../../src/validate/index.js"],"names":["addPluginValidator","validate","showErrors","showDepreciations","utils","combineErrorDetails","VALIDATE_OPTIONS","improveErrors","_pluginValidators","rootPath","handler","generateSchema","topLevelKeys","servers","joi","object","app","plugins","array","_origionalConfig","hooks","pattern","alternatives","localCommand","string","remoteCommand","method","func","Object","keys","forEach","key","any","validateAll","_config","origionalConfig","details","results","config","entries","property","validator","undefined","map","errors","depreciations","problem","type","push","error","message","depreciation","lines","plural","length","console","log","chalk","red","join","yellow"],"mappings":"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","file":"index.js","sourcesContent":["import * as utils from './utils';\nconst { combineErrorDetails, VALIDATE_OPTIONS, improveErrors } = utils;\nimport chalk from 'chalk';\nimport joi from 'joi';\nimport validateServer from './servers';\n\nexport const _pluginValidators = {};\n\nexport function addPluginValidator(rootPath, handler) {\n  _pluginValidators[rootPath] = handler;\n}\n\nfunction generateSchema() {\n  const topLevelKeys = {\n    servers: joi.object(),\n    app: joi.object(),\n    plugins: joi.array(),\n    _origionalConfig: joi.object(),\n    hooks: joi.object().pattern(/.*/, joi.alternatives(joi.object({\n      localCommand: joi.string(),\n      remoteCommand: joi.string(),\n      method: joi.func()\n    }),\n    joi.func()\n    ))\n  };\n\n  Object.keys(_pluginValidators).forEach(key => {\n    topLevelKeys[key] = joi.any();\n  });\n\n  return joi.object().keys(topLevelKeys);\n}\n\nfunction validateAll(_config, origionalConfig) {\n  let details = [];\n  let results;\n  // TODO: the config object created by the plugin api\n  // should always have this property.\n  const config = { ..._config, _origionalConfig: origionalConfig};\n\n  results = joi.validate(config, generateSchema(), VALIDATE_OPTIONS);\n  details = combineErrorDetails(details, results);\n\n  if (config.servers) {\n    results = validateServer(config.servers);\n    details = combineErrorDetails(details, results);\n  }\n\n  for (const [property, validator] of Object.entries(_pluginValidators)) {\n    if (config[property] !== undefined) {\n      results = validator(config, utils);\n      details = combineErrorDetails(details, results);\n    }\n  }\n\n  return details.map(improveErrors);\n}\n\nexport default function validate(config, origionalConfig) {\n  const errors = [];\n  const depreciations = [];\n\n  validateAll(config, origionalConfig).forEach(problem => {\n    if (problem.type === 'depreciation') {\n      depreciations.push(problem);\n    } else {\n      errors.push(problem);\n    }\n  });\n\n  return {\n    errors: errors.map(error => error.message),\n    depreciations: depreciations.map(depreciation => depreciation.message)\n  };\n}\n\nexport function showErrors(errors) {\n  const lines = [];\n  const plural = errors.length > 1 ? 's' : '';\n\n  lines.push(`${errors.length} Validation Error${plural}`);\n\n  errors.forEach(error => {\n    lines.push(`  - ${error}`);\n  });\n\n  lines.push('');\n\n  console.log(chalk.red(lines.join('\\n')));\n}\n\nexport function showDepreciations(depreciations) {\n  const lines = [];\n  const plural = depreciations.length > 1 ? 's' : '';\n\n  lines.push(`${depreciations.length} Depreciation${plural}`);\n\n  depreciations.forEach(depreciation => {\n    lines.push(`  - ${depreciation}`);\n  });\n\n  lines.push('');\n\n  console.log(chalk.yellow(lines.join('\\n')));\n}\n"]}