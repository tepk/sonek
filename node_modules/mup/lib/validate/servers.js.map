{"version":3,"sources":["../../src/validate/servers.js"],"names":["validateServers","schema","joi","object","keys","pattern","host","alternatives","string","trim","required","username","pem","password","opts","port","number","servers","details","result","validate","VALIDATE_OPTIONS","Object","forEach","server","key","indexOf","length","push","message","path"],"mappings":";;;;;kBAkBwBA,e;;AAlBxB;;AACA;;;;;;AAEA;AACA,IAAMC,SAASC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,OAApB,CAA4B,IAA5B,EAAkC;AAC/CC,QAAMJ,cACHK,YADG,CAEFL,cAAIM,MAAJ,GAAaC,IAAb,EAFE,EAIHC,QAJG,EADyC;AAM/CC,YAAUT,cAAIM,MAAJ,GAAaE,QAAb,EANqC;AAO/CE,OAAKV,cAAIM,MAAJ,GAAaC,IAAb,EAP0C;AAQ/CI,YAAUX,cAAIM,MAAJ,EARqC;AAS/CM,QAAMZ,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AACtBW,UAAMb,cAAIc,MAAJ;AADgB,GAAlB;AATyC,CAAlC,CAAf;;AAce,SAAShB,eAAT,CAAyBiB,OAAzB,EAAkC;AAC/C,MAAIC,UAAU,EAAd;AACA,MAAMC,SAASjB,cAAIkB,QAAJ,CAAaH,OAAb,EAAsBhB,MAAtB,EAA8BoB,uBAA9B,CAAf;AACAH,YAAU,gCAAoBA,OAApB,EAA6BC,MAA7B,CAAV;;AAEAG,SAAOlB,IAAP,CAAYa,OAAZ,EAAqBM,OAArB,CAA6B,eAAO;AAClC,QAAMC,SAASP,QAAQQ,GAAR,CAAf;AACA,QAAID,OAAOZ,GAAP,IAAcY,OAAOZ,GAAP,CAAWc,OAAX,CAAmB,MAAnB,MAA+BF,OAAOZ,GAAP,CAAWe,MAAX,GAAoB,CAArE,EAAwE;AACtET,cAAQU,IAAR,CAAa;AACXC,iBAAS,yFADE;AAEXC,cAASL,GAAT;AAFW,OAAb;AAID;AACF,GARD;;AAUA,SAAO,wBAAYP,OAAZ,EAAqB,SAArB,CAAP;AACD","file":"servers.js","sourcesContent":["import { addLocation, combineErrorDetails, VALIDATE_OPTIONS } from './utils';\nimport joi from 'joi';\n\n// The regexp used matches everything\nconst schema = joi.object().keys().pattern(/.*/, {\n  host: joi\n    .alternatives(\n      joi.string().trim()\n    )\n    .required(),\n  username: joi.string().required(),\n  pem: joi.string().trim(),\n  password: joi.string(),\n  opts: joi.object().keys({\n    port: joi.number()\n  })\n});\n\nexport default function validateServers(servers) {\n  let details = [];\n  const result = joi.validate(servers, schema, VALIDATE_OPTIONS);\n  details = combineErrorDetails(details, result);\n\n  Object.keys(servers).forEach(key => {\n    const server = servers[key];\n    if (server.pem && server.pem.indexOf('.pub') === server.pem.length - 4) {\n      details.push({\n        message: 'Needs to be a path to a private key. The file extension \".pub\" is used for public keys.',\n        path: `${key}.pem`\n      });\n    }\n  });\n\n  return addLocation(details, 'servers');\n}\n"]}