{"version":3,"sources":["../../src/validate/utils.js"],"names":["improveErrors","addLocation","combineErrorDetails","serversExist","addDepreciation","VALIDATE_OPTIONS","abortEarly","convert","error","type","message","replace","details","location","map","detailPath","detail","path","Array","join","pathSeperator","length","results","concat","additionalDetails","serversConfig","serversUsed","messages","servers","Object","keys","using","forEach","indexOf","key","push","reason","link"],"mappings":";;;;;QAKgBA,a,GAAAA,a;QAoBAC,W,GAAAA,W;QAeAC,mB,GAAAA,mB;QAUAC,Y,GAAAA,Y;QAgBAC,e,GAAAA,e;AAlET,IAAMC,8CAAmB;AAC9BC,cAAY,KADkB;AAE9BC,WAAS;AAFqB,CAAzB;;AAKA,SAASP,aAAT,CAAuBQ,KAAvB,EAA8B;AACnC;AACA,MAAIA,MAAMC,IAAN,KAAe,qBAAnB,EAA0C;AACxCD,UAAME,OAAN,GAAgBF,MAAME,OAAN,CAAcC,OAAd,CACd,iBADc,EAEd,yBAFc,CAAhB;AAID,GALD,MAKO,IAAIH,MAAMC,IAAN,KAAe,gBAAnB,EAAqC;AAC1CD,UAAME,OAAN,GAAgBF,MAAME,OAAN,CAAcC,OAAd,CACd,gCADc,EAEd,OAFc,CAAhB;AAIAH,UAAME,OAAN,IAAiB,yBAAjB;AACD,GANM,MAMA,IAAIF,MAAMC,IAAN,KAAe,YAAnB,EAAiC;AACtCD,UAAME,OAAN,GAAgBF,MAAME,OAAN,CAAcC,OAAd,CAAsB,QAAtB,EAAgC,EAAhC,CAAhB;AACD;;AAED,SAAOH,KAAP;AACD;;AAEM,SAASP,WAAT,CAAqBW,OAArB,EAA8BC,QAA9B,EAAwC;AAC7C,SAAOD,QAAQE,GAAR,CAAY,kBAAU;AAC3B,QAAMC,aAAaC,OAAOC,IAAP,YAAuBC,KAAvB,GAA+BF,OAAOC,IAAP,CAAYE,IAAZ,CAAiB,GAAjB,CAA/B,GAAuDH,OAAOC,IAAjF;AACA,QAAMG,gBAAgBL,WAAWM,MAAX,GAAoB,CAApB,GAAwB,GAAxB,GAA8B,EAApD;;AAEA;AACA;AACAL,WAAON,OAAP,GAAiBM,OAAON,OAAP,CAAeC,OAAf,CAAuB,WAAvB,EAAoC,EAApC,CAAjB;;AAEAK,WAAON,OAAP,SAAqBG,QAArB,GAAgCO,aAAhC,GAAgDL,UAAhD,UAA+DC,OAAON,OAAtE;;AAEA,WAAOM,MAAP;AACD,GAXM,CAAP;AAYD;;AAEM,SAASd,mBAAT,CAA6BU,OAA7B,EAAsCU,OAAtC,EAA+C;AACpD,MAAIA,mBAAmBJ,KAAvB,EAA8B;AAC5B,WAAON,QAAQW,MAAR,CAAeD,OAAf,CAAP;AACD;;AAED,MAAME,oBAAoBF,QAAQd,KAAR,GAAgBc,QAAQd,KAAR,CAAcI,OAA9B,GAAwC,EAAlE;;AAEA,SAAOA,QAAQW,MAAR,CAAeC,iBAAf,CAAP;AACD;;AAEM,SAASrB,YAAT,GAA4D;AAAA,MAAtCsB,aAAsC,uEAAtB,EAAsB;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AACjE,MAAMC,WAAW,EAAjB;AACA,MAAMC,UAAUC,OAAOC,IAAP,CAAYL,aAAZ,CAAhB;AACA,MAAMM,QAAQF,OAAOC,IAAP,CAAYJ,WAAZ,CAAd;AACAK,QAAMC,OAAN,CAAc,eAAO;AACnB,QAAIJ,QAAQK,OAAR,CAAgBC,GAAhB,MAAyB,CAAC,CAA9B,EAAiC;AAC/BP,eAASQ,IAAT,CAAc;AACZzB,8BAAoBwB,GAApB,qBADY;AAEZjB,cAAM;AAFM,OAAd;AAID;AACF,GAPD;;AASA,SAAOU,QAAP;AACD;;AAEM,SAASvB,eAAT,CAAyBQ,OAAzB,EAAkCK,IAAlC,EAAwCmB,MAAxC,EAAgDC,IAAhD,EAAsD;AAC3DzB,UAAQuB,IAAR,CAAa;AACX1B,UAAM,cADK;AAEXQ,cAFW;AAGXP,aAAY0B,MAAZ,0BAAuCC;AAH5B,GAAb;;AAMA,SAAOzB,OAAP;AACD","file":"utils.js","sourcesContent":["export const VALIDATE_OPTIONS = {\n  abortEarly: false,\n  convert: false\n};\n\nexport function improveErrors(error) {\n  // Todo: we can configure the joi messages instead of this\n  if (error.type === 'object.allowUnknown') {\n    error.message = error.message.replace(\n      ' is not allowed',\n      ' is an unknown property'\n    );\n  } else if (error.type === 'object.without') {\n    error.message = error.message.replace(\n      ' conflict with forbidden peer ',\n      ' and '\n    );\n    error.message += ' cannot both be defined';\n  } else if (error.type === 'object.min') {\n    error.message = error.message.replace('.value', '');\n  }\n\n  return error;\n}\n\nexport function addLocation(details, location) {\n  return details.map(detail => {\n    const detailPath = detail.path instanceof Array ? detail.path.join('.') : detail.path;\n    const pathSeperator = detailPath.length > 0 ? '.' : '';\n\n    // removes property name from message since it is\n    // already part of detail.path\n    detail.message = detail.message.replace(/^\".*?\"\\s+/, '');\n\n    detail.message = `\"${location}${pathSeperator}${detailPath}\" ${detail.message}`;\n\n    return detail;\n  });\n}\n\nexport function combineErrorDetails(details, results) {\n  if (results instanceof Array) {\n    return details.concat(results);\n  }\n\n  const additionalDetails = results.error ? results.error.details : [];\n\n  return details.concat(additionalDetails);\n}\n\nexport function serversExist(serversConfig = {}, serversUsed = {}) {\n  const messages = [];\n  const servers = Object.keys(serversConfig);\n  const using = Object.keys(serversUsed);\n  using.forEach(key => {\n    if (servers.indexOf(key) === -1) {\n      messages.push({\n        message: `Server \"${key}\" doesn't exist`,\n        path: 'servers'\n      });\n    }\n  });\n\n  return messages;\n}\n\nexport function addDepreciation(details, path, reason, link) {\n  details.push({\n    type: 'depreciation',\n    path,\n    message: `${reason}\\n  Learn more at ${link}`\n  });\n\n  return details;\n}\n"]}