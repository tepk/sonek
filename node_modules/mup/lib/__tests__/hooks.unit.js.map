{"version":3,"sources":["../../src/__tests__/hooks.unit.js"],"names":["describe","beforeEach","Object","keys","hooks","prop","it","target","localScript","length","console","dir","method"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,OAAT,EAAkB,YAAM;AACtBC,aAAW,YAAM;AAAA;AAAA;AAAA;;AAAA;AACf,2BAAmBC,OAAOC,IAAP,CAAYC,YAAZ,CAAnB,8HAAuC;AAAA,YAA5BC,IAA4B;;AACrC,eAAOD,aAAMC,IAAN,CAAP;AACD;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhB,GAJD;;AAMAC,KAAG,yBAAH,EAA8B,YAAM;AAClC,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,0BAAOH,aAAM,mBAAN,EAA2BK,MAA3B,KAAsC,CAA7C;AACA,0BAAOL,aAAM,mBAAN,EAA2B,CAA3B,MAAkCG,MAAzC;AACD,GAND;;AAQAD,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,6BAAa,mBAAb,EAAkCA,MAAlC;;AAEA,0BAAOH,aAAM,mBAAN,EAA2BK,MAA3B,KAAsC,CAA7C;AACA,0BAAOL,aAAM,mBAAN,EAA2B,CAA3B,MAAkCG,MAAzC;AACD,GARD;;AAUAD,KAAG,8DAAH,EAAmE,YAAM;AACvE,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;AACA,6BAAa,WAAb,EAA0BD,MAA1B;;AAEA,0BAAOH,aAAM,mBAAN,EAA2B,CAA3B,MAAkCG,MAAzC;AACD,GALD;AAMAD,KAAG,8CAAH,EAAmD,YAAM;AACvD,QAAMC,SAAS,SAATA,MAAS,GAAW,CAAE,CAA5B;;AAEA,6BAAa,WAAb,EAA0BA,MAA1B;AACAG,YAAQC,GAAR,CAAYP,YAAZ;;AAEA,0BAAOA,aAAM,mBAAN,EAA2B,CAA3B,EAA8BQ,MAA9B,KAAyCL,MAAhD;AACD,GAPD;AAQD,CAvCD","file":"hooks.unit.js","sourcesContent":["import { hooks, registerHook } from '../hooks';\nimport assert from 'assert';\n\ndescribe('hooks', () => {\n  beforeEach(() => {\n    for (const prop of Object.keys(hooks)) {\n      delete hooks[prop];\n    }\n  });\n\n  it('should create new hooks', () => {\n    const target = { localScript: 'test' };\n\n    registerHook('pre.default.setup', target);\n    assert(hooks['pre.default.setup'].length === 1);\n    assert(hooks['pre.default.setup'][0] === target);\n  });\n\n  it('should add hooks when some already exist', () => {\n    const target = { localScript: 'test' };\n\n    registerHook('pre.default.setup', target);\n    registerHook('pre.default.setup', target);\n\n    assert(hooks['pre.default.setup'].length === 2);\n    assert(hooks['pre.default.setup'][1] === target);\n  });\n\n  it('should add missing plugin name to hooks for default commands', () => {\n    const target = { localScript: 'test' };\n    registerHook('pre.setup', target);\n\n    assert(hooks['pre.default.setup'][0] === target);\n  });\n  it('should move functions to the method property', () => {\n    const target = function() {};\n\n    registerHook('pre.setup', target);\n    console.dir(hooks);\n\n    assert(hooks['pre.default.setup'][0].method === target);\n  });\n});\n"]}