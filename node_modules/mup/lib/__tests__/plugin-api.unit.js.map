{"version":3,"sources":["../../src/__tests__/plugin-api.unit.js"],"names":["validate","describe","api","base","path","join","__dirname","filteredArgs","program","verbose","beforeEach","PluginAPI","it","_api","config","configPath","to","include","equal","has","property","resolvePath","be","a","runTaskList","getDockerLogs","runSSHCommand","getArgs","getBasePath","getVerbose","getOptions","fsStub","configStub","sinon","stub","fs","callsFake","toString","meteor","afterEach","restore","hasMeteorPackage","errors","depreciations","validatorStub","totalConsoleOutput","consoleStub","returns","console","text","validateConfig","contain","expected","app","type","docker","image","stopAppDuringPrepareBundle","result","_normalizeConfig","deep","newConfig","servers","two","setConfig","getConfig","commandCalled","preHookCalled","postHookCalled","hooks","method","commands","handler","after","runCommand","catch","cb","then","log","e","commandHistory","name","sessions","getSessions","have","length","_loadSessions","keys","_pickSessions"],"mappings":"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","file":"plugin-api.unit.js","sourcesContent":["import * as validate from '../validate';\nimport { commands } from '../commands';\nimport { expect } from 'chai';\nimport fs from 'fs';\nimport { hooks } from '../hooks';\nimport path from 'path';\nimport PluginAPI from '../plugin-api';\nimport sinon from 'sinon';\n\ndescribe('PluginAPI', () => {\n  let api;\n  const base = path.join(__dirname, '../../tests/fixtures/project-unit-tests');\n  const filteredArgs = ['--tail'];\n  const program = {\n    verbose: true\n  };\n\n  beforeEach(() => {\n    api = new PluginAPI(base, filteredArgs, program);\n  });\n\n  describe('configPath', () => {\n    it('should prefer --config option', () => {\n      const _api = new PluginAPI(base, filteredArgs, { config: '~/project2/.deploy/mup.js' });\n\n      expect(_api.configPath).to.include('project2');\n    });\n\n    it('should fallback to base', () => {\n      expect(api.configPath).to.equal(path.join(base, 'mup.js'));\n    });\n  });\n\n  describe('base', () => {\n    it('should prefer config path', () => {\n      const _api = new PluginAPI(base, filteredArgs, { config: '~/project2/.deploy/mup.js' });\n      expect(_api.base).to.equal('~/project2/.deploy');\n    });\n\n    it('should fallback to given base', () => {\n      expect(api.base).to.equal(base);\n    });\n  });\n\n  describe('properties', () => {\n    it('should have \"program\"', () => {\n      expect(api).has.property('program');\n    });\n    it('should have \"commandHistory\"', () => {\n      expect(api).has.property('commandHistory');\n    });\n  });\n  describe('utils', () => {\n    it('should have resolvePath', () => {\n      expect(api.resolvePath).to.be.a('function');\n    });\n    it('should have runTaskList', () => {\n      expect(api.runTaskList).to.be.a('function');\n    });\n    it('should have getDockerLogs', () => {\n      expect(api.getDockerLogs).to.be.a('function');\n    });\n    it('should have runSSHCommand', () => {\n      expect(api.runSSHCommand).to.be.a('function');\n    });\n  });\n  describe('getArgs', () => {\n    it('should return args', () => {\n      expect(api.getArgs()).to.equal(filteredArgs);\n    });\n  });\n\n  describe('getBasePath', () => {\n    it('should return base', () => {\n      expect(api.getBasePath()).to.equal(base);\n    });\n  });\n\n  describe('getVerbose', () => {\n    it('should return verbose', () => {\n      expect(api.getVerbose()).to.equal(true);\n    });\n  });\n\n  describe('getOptions', () => {\n    it('should return options', () => {\n      expect(api.getOptions()).to.equal(program);\n    });\n  });\n\n  describe('hasMeteorPackage', () => {\n    let fsStub;\n    let configStub;\n\n    beforeEach(() => {\n      fsStub = sinon.stub(fs, 'readFileSync').callsFake(() => ({\n        toString() {\n          return `\n            package1@3\n            package2@3\n            #package3@3\n            `;\n        }\n      }));\n\n      configStub = sinon.stub(api, 'getConfig').callsFake(() => ({\n        meteor: {\n          path: '../'\n        }\n      }));\n    });\n\n    afterEach(() => {\n      fsStub.restore();\n      configStub.restore();\n    });\n\n    it('should return true if package is used', () => {\n      expect(api.hasMeteorPackage('package2')).to.equal(true);\n    });\n\n    it('should ignore commented out lines', () => {\n      expect(api.hasMeteorPackage('package3')).to.equal(false);\n    });\n\n    it('should return false if could not find app', () => {\n      fsStub.restore();\n      expect(api.hasMeteorPackage('package2')).to.equal(false);\n    });\n  });\n\n  describe('validateConfig', () => {\n    const errors = { errors: ['error1', 'error2'], depreciations: [] };\n    let validatorStub;\n    let totalConsoleOutput = '';\n    let consoleStub;\n    beforeEach(() => {\n      totalConsoleOutput = '';\n      validatorStub = sinon.stub(validate, 'default').returns(errors);\n      consoleStub = sinon.stub(console, 'log').callsFake((...text) => {\n        totalConsoleOutput += text.join(' ');\n      });\n    });\n\n    afterEach(() => {\n      validatorStub.restore();\n      consoleStub.restore();\n    });\n\n    it('should show validation errors', () => {\n      api.validateConfig(api.configPath);\n      consoleStub.restore();\n\n      expect(totalConsoleOutput).to.contain('- error1');\n      expect(totalConsoleOutput).to.contain('- error2');\n    });\n\n    it('should show nothing when config is valid', () => {\n      errors.errors = [];\n      errors.depreciations = [];\n\n      api.validateConfig(api.configPath);\n\n      expect(totalConsoleOutput).to.equal('');\n    });\n  });\n\n  describe('_normalizeConfig', () => {\n    it('should copy meteor object to app', () => {\n      const expected = { meteor: { path: '../' }, app: { type: 'meteor', path: '../', docker: { image: 'kadirahq/meteord', stopAppDuringPrepareBundle: true } } };\n      const config = { meteor: { path: '../' } };\n      const result = api._normalizeConfig(config);\n\n      expect(result).to.deep.equal(expected);\n    });\n  });\n\n  describe('setConfig', () => {\n    it('should update the old config', () => {\n      const newConfig = { servers: { two: 0 } };\n      api.setConfig(newConfig);\n\n      expect(api.getConfig()).to.deep.equal(newConfig);\n    });\n  });\n\n  describe('runCommand', () => {\n    let commandCalled = false;\n    let preHookCalled = false;\n    let postHookCalled = false;\n\n    beforeEach(() => {\n      hooks['pre.test.logs'] = [{\n        method() {\n          preHookCalled = true;\n        }\n      }];\n      hooks['post.test.logs'] = [{\n        method() {\n          postHookCalled = true;\n        }\n      }];\n\n      commands['test.logs'] = {\n        handler() {\n          commandCalled = true;\n        }\n      };\n\n      commandCalled = false;\n      preHookCalled = false;\n      postHookCalled = false;\n    });\n\n    after(() => {\n      delete hooks['pre.test.logs'];\n      delete hooks['post.test.logs'];\n      delete commands['test.logs'];\n    });\n\n    it('should throw if name is not provided', cb => {\n      api.runCommand().catch(() => {\n        cb();\n      });\n    });\n\n    it('should throw if unknown command', cb => {\n      api.runCommand('nonexistent.command').catch(() => {\n        cb();\n      });\n    });\n\n    it('should run command', cb => {\n      api.runCommand('test.logs').then(() => {\n        expect(commandCalled).to.equal(true);\n        cb();\n      });\n    });\n\n    it('should run hooks', cb => {\n      api.runCommand('test.logs').then(() => {\n        expect(preHookCalled).to.equal(true);\n        expect(postHookCalled).to.equal(true);\n        cb();\n      })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n\n    it('should update commandHistory', () => {\n      api.runCommand('test.logs');\n      expect(api.commandHistory).to.deep.equal([{name: 'test.logs'}]);\n    });\n  });\n\n  describe('getSessions', () => {\n    it('should return sessions for plugins', () => {\n      const sessions = api.getSessions(['meteor', 'mongo']);\n      expect(sessions).to.have.length(2);\n    });\n  });\n\n  describe('_loadSessions', () => {\n    it('should add sessions to this.sessions', () => {\n      api._loadSessions();\n      expect(api.sessions).to.have.keys('one', 'two');\n    });\n  });\n\n  describe('_pickSessions', () => {\n    it('should return sessions for each plugin', () => {\n      const result = api._pickSessions(['meteor', 'mongo']);\n      expect(result).to.have.keys('one', 'two');\n    });\n  });\n});\n"]}